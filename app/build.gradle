apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.29.0'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.bigneon.studio"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 2
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [crashlytics: getLocalProperty("crashlytics.key")]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:29.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Retrofit - REST API calls handler
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    // RecyclerView
    implementation 'com.android.support:recyclerview-v7:29.0.0'

    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    implementation 'com.android.support:exifinterface:29.0.0'

    // https://mvnrepository.com/artifact/com.squareup.picasso/picasso
    implementation('com.squareup.picasso:picasso:2.71828', {
        exclude group: 'com.android.support', module: 'exifinterface'
    })

    implementation('me.dm7.barcodescanner:zxing:1.9', {
        exclude module: 'support-v4'
    })

    implementation('com.squareup.okhttp3:logging-interceptor:3.8.0')

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true
    }

    implementation "org.jetbrains.anko:anko-commons:0.10.4"
}

def getLocalProperty(String propertyName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propertyName]
    } else {
        return ""
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}